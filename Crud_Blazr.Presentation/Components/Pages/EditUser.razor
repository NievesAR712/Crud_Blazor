@page "/useredit/{Id:int}"
@using Crud_Blazr.Application.Services
@using Crud_Blazr.Core.Models

@inject UserService UserService
@inject NavigationManager Navigation

<h3>Editar Usuario</h3>

@if (isLoading)
{
    <p>Cargando...</p>
}
else
{
    <EditForm Model="@user" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name">Nombre:</label>
            <InputText id="name" class="form-control" @bind-Value="user.Name" />
        </div>

        <div class="form-group">
            <label for="email">Email:</label>
            <InputText id="email" class="form-control" @bind-Value="user.Email" />
        </div>

        <div class="form-group">
            <label for="phone">Teléfono:</label>
            <InputText id="phone" class="form-control" @bind-Value="user.Phone" />
        </div>

        <div class="form-group">
            <button class="btn btn-primary" type="submit">Guardar</button>
            <button class="btn btn-secondary" @onclick="NavigateBack">Cancelar</button>
        </div>
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }
    private Usuario user;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        // Cargar los detalles del usuario
        user = await UserService.GetUserByIdAsync(Id);
        isLoading = false;
    }

    private async Task HandleValidSubmit()
    {
        // Llamar al servicio para actualizar el usuario
        await UserService.UpdateUserAsync(user);

        // Redirigir de vuelta a la lista de usuarios
        Navigation.NavigateTo("/");
    }

    private void NavigateBack()
    {
        Navigation.NavigateTo("/");
    }
}
