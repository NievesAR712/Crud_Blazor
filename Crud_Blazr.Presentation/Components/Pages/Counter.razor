@page "/counter"
@using Crud_Blazr.Core.Models
@using Crud_Blazr.Application.Services
@using System.Diagnostics
@using Crud_Blazr.SignalR.Serv.Comandos
@using Crud_Blazr.SignalR.Serv.Enums
@using Microsoft.AspNetCore.SignalR.Client
@using System.Text.Json

@inject UserService UserService
@inject NavigationManager Navigation

<h3>Agregar Nuevo Usuario</h3>

<EditForm Model="@newUser" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="name">Nombre:</label>
        <InputText id="name" class="form-control" @bind-Value="newUser.Name" />
    </div>

    <div>
        <label for="email">Correo Electrónico:</label>
        <InputText id="email" class="form-control" @bind-Value="newUser.Email" />
    </div>

    <div>
        <label for="phone">Teléfono:</label>
        <InputText id="phone" class="form-control" @bind-Value="newUser.Phone" />
    </div>

    <div>
        <label for="password">Contraseña:</label>
        <InputText id="password" class="form-control" @bind-Value="newUser.Password" />
    </div>

    <div>
        <button type="submit" class="btn btn-primary">Agregar Usuario</button>
    </div>
</EditForm>

@code {
    private Usuario newUser = new Usuario();
    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl("https://localhost:7198/signalRHub")
            .Build();

        await hubConnection.StartAsync();
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            if (hubConnection is not null)
            {
                await hubConnection.SendAsync("IncomingMessage", new ComandoUser { Command = CommandType.AddUser, Data = JsonSerializer.Serialize(newUser) });
            }
            StateHasChanged();
            
        }
        catch (Exception ex)
        {
            Debug.WriteLine($"Error al agregar usuario: {ex.Message}");
        }
    }

    

}